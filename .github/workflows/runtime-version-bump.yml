name: Runtime Version Bump

on:
  schedule:
    - cron: '0 8 * * 1' # Mondays at 08:00 UTC
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine latest Ruby (minor+patch within current major)
        id: ruby
        run: |
          current=$(cat .ruby-version | tr -d ' ')
          major_minor=${current%.*}
          latest=$(curl -s https://cache.ruby-lang.org/pub/ruby/index.txt | awk '{print $1}' | grep "^${major_minor}\." | sort -V | tail -1 || true)
          # Fallback logic: ensure latest matches semver-like pattern
          if ! echo "$latest" | grep -Eq '^[0-9]+\.[0-9]+\.[0-9]+'; then
            latest=$current
          fi
          if [ -z "$current" ] || ! echo "$current" | grep -Eq '^[0-9]+\.[0-9]+\.[0-9]+'; then
            echo "ERROR: .ruby-version current value invalid or empty ($current)" >&2
            exit 1
          fi
          echo "current=$current" >> $GITHUB_OUTPUT
          echo "latest=$latest" >> $GITHUB_OUTPUT

      - name: Update .ruby-version if needed
        if: steps.ruby.outputs.latest != steps.ruby.outputs.current
        run: |
          if [ -z "${{ steps.ruby.outputs.latest }}" ]; then
            echo "Refusing to write empty Ruby version" >&2
            exit 1
          fi
          echo "${{ steps.ruby.outputs.latest }}" > .ruby-version
          echo "Bumped .ruby-version to ${{ steps.ruby.outputs.latest }}" >> "$GITHUB_STEP_SUMMARY"

      - name: Determine latest Node LTS matching major in .nvmrc
        id: node
        run: |
          if [ ! -f .nvmrc ]; then
            echo "No .nvmrc present; skipping" >> $GITHUB_STEP_SUMMARY
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          current=$(cat .nvmrc | tr -d ' ')
          major=$(echo "$current" | cut -d. -f1)
          latest=$(curl -fsSL https://nodejs.org/dist/index.json | jq -r \
            --arg major "$major" '[.[] | select(.version | test("^v"+$major+"\\.")) | select(.lts)] | map(.version) | sort_by(sub("^v"; "")) | last' || true)
          latest=${latest#v}
          # Validate versions
          if ! echo "$current" | grep -Eq '^[vV]?[0-9]+\.[0-9]+\.[0-9]+'; then
            echo "ERROR: .nvmrc current value invalid or empty ($current)" >&2
            exit 1
          fi
          if ! echo "$latest" | grep -Eq '^[0-9]+\.[0-9]+\.[0-9]+'; then
            latest=$current
          fi
          echo "current=$current" >> $GITHUB_OUTPUT
          echo "latest=$latest" >> $GITHUB_OUTPUT

      - name: Update .nvmrc if needed
        if: steps.node.outputs.skip != 'true' && steps.node.outputs.latest != steps.node.outputs.current
        run: |
          if [ -z "${{ steps.node.outputs.latest }}" ]; then
            echo "Refusing to write empty Node version" >&2
            exit 1
          fi
            
          echo "${{ steps.node.outputs.latest }}" > .nvmrc
          echo "Bumped .nvmrc to ${{ steps.node.outputs.latest }}" >> "$GITHUB_STEP_SUMMARY"

      - name: Create Pull Request if changes
        run: |
          if git diff --quiet; then
            echo "No runtime version changes." >> $GITHUB_STEP_SUMMARY
            exit 0
          fi
          branch="runtime-version-bump/${{ github.run_id }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b "$branch"
          git add .ruby-version .nvmrc 2>/dev/null || true
          git commit -m "chore: bump runtime versions (.ruby-version / .nvmrc)" || exit 0
          git push origin "$branch"
          if command -v gh >/dev/null 2>&1; then
            gh pr create --title "chore: bump runtime versions" --body "Automated update of .ruby-version and/or .nvmrc." --base main || echo "PR creation via gh failed" >> $GITHUB_STEP_SUMMARY
          else
            pr_payload=$(jq -n --arg title "chore: bump runtime versions" --arg head "$branch" --arg base "main" --arg body "Automated update of .ruby-version and/or .nvmrc." '{title:$title, head:$head, base:$base, body:$body}')
            curl -s -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" \
              -d "$pr_payload" "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls" >> $GITHUB_STEP_SUMMARY || echo "Manual PR creation required" >> $GITHUB_STEP_SUMMARY
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
